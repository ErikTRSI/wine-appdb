:javascript
  if (appId) { appId = "#{@wine_app.id}"; }
%ol.breadcrumb
  %li= link_to 'Apps', wine_apps_path
  %li.active= @wine_app.name

.page-header
  %h1
    =@wine_app.name
    %small= @wine_app.developer.name if @wine_app.developer
    #logo.placeholder
    #vote_chart
    :javascript
      ready();
    %a.btn.btn-default
      %i.fa.fa-star-half-full
  .btn-group.btn-group-lg
    - if user_signed_in?
      =link_to edit_wine_app_path(@wine_app.id), class: "btn btn-default btn-lg" do
        %i.fa.fa-edit
        Edit
      =link_to @wine_app, class: "btn btn-default btn-lg", method: :delete, data: { confirm: 'Are you sure?' } do
        %i.fa.fa-trash-o


.voteform
  = form_for @vote, url: wine_app_create_vote_path(@wine_app, format: :json), html: { id: "voteForm" }, remote: true, method: :post do |f| 
    %p
      %b Difficulty
      = f.range_field :difficulty_value, { min: 0, max: 100, step: 1 }

    %p 
      %b Quality
      = f.range_field :quality_value, { min: 0, max: 100, step: 1 }
    = submit_tag "Vote", class: "btn btn-primary"
    #votealert.alert.alert-success.fade.in(style="width: 50%; display: none;")
      %button.close(type="button" data-dismiss="alert")
        :plain
          &times;
      .message
%ul
  %li
    %b Description
    [ 
    =link_to("History", wine_app_wiki_entries_path(@wine_app)) 
    ]

    #wiki
      :markdown
        #{ @wine_app.description }

    - if user_signed_in? 

      = form_for @wine_app, url: "/apps/#{@wine_app.id}/wiki/descriptions.json", html: {id: "descForm"}, remote: true, method: :post do |f|
        = f.hidden_field :description, id: "hidDescription", name: "wiki_entry[content]"
        = hidden_field_tag "wiki_entry[type]", "description", id: "hidType"

        :javascript
          jQuery('#wiki').hallo({
            plugins: {
              'halloformat': {},
              'halloheadings': {},
              'halloblock': {},
              'hallojustify': {},
              'hallolists': {},
              'halloreundo': {}
            },
            toolbar: 'halloToolbarFixed'
          });
          jQuery('#wiki').bind('hallomodified', function(event, data) { 
            // console.debug(toMarkdown(data.content));
            jQuery('#hidDescription').val(toMarkdown(data.content)); 
          });
          jQuery('#descForm').bind('ajax:success', function(event, data, textStatus, xhr) { 
            console.debug(data);
          });

        = submit_tag "Update", class: "btn btn-primary"
        #descalert.alert.alert-success.fade.in(style="width: 50%; display: none;")
          %button.close(type="button" data-dismiss="alert")
            :plain
              &times;
          .message

        :javascript
          $('form#descForm').bind('ajax:success', 
            function(evt, data, status, xhr){
              console.log(data.message);
              $alert = $('#descalert');
              $msg = $('div:first.message', $alert);
              $msg.text(data.message);
              $alert.show();

              setInterval(function() { $alert.hide(); }, 3000);
            });
          $('form#descForm').ajaxError(function(xhr, status, error) {
            $('#descalert.message').text('Failed.');
          });

  %li 
    %b Problems
    -if @wine_app.problems.count > 0
      %ul
        - @wine_app.problems.each do |p| 
          %li= p.problem

  - if @wine_app.screenshots.count > 0
    %li 
      %b Screenshots
      %ul.thumbnails
        -@wine_app.screenshots.each do |ss|
          %li= link_to image_tag(ss.image.url(:thumb), class: "img-rounded"), wine_app_screenshot_path(@wine_app, ss)

